{"version":3,"file":"static/js/893.d78eb1aa.chunk.js","mappings":"gPAIMA,EAAKC,EAAAA,GAAAA,IAAD,2HAiBV,GAVgBC,EAAAA,EAAAA,KAAS,YAAe,IAAbC,EAAY,EAAZA,SAChBC,GAAWC,EAAAA,EAAAA,KAAXD,UACP,OACC,8BAEGA,EAAUE,YAAc,MAAM,SAACN,EAAD,UAAOG,KAI5C,I,gDCZOI,E,QAAYC,EAAAA,QACdC,EAASR,EAAAA,GAAAA,IAAH,wFAKNS,EAAKT,EAAAA,GAAAA,GAAH,gEAIFU,EAAQV,EAAAA,GAAAA,IAAH,4CAiGX,GA7FkBC,EAAAA,EAAAA,KAAS,WACvB,OAAkCG,EAAAA,EAAAA,KAA1BO,EAAR,EAAQA,WAAYR,EAApB,EAAoBA,UAEdS,GAAOC,EAAAA,EAAAA,UACPC,GAAOD,EAAAA,EAAAA,UACPE,GAAQC,EAAAA,EAAAA,KAAc,iBAAO,CAC/BC,MAAO,KACPC,SAF+B,SAEtBD,GACLF,EAAME,MAAQA,CACjB,EACGE,eACA,OAAOJ,EAAME,MAAN,aAAoBF,EAAME,OAA1B,EACV,EACDG,OAAQ,KACRC,UAT+B,SASrBD,GACNL,EAAMK,OAASA,CAClB,EACGE,gBACA,OAAOP,EAAMK,OAAN,aAAqBL,EAAMK,QAAW,EAChD,EACGG,cACA,OAAOZ,EAAWa,WAAWC,WAAWC,IAAID,WAAWC,IAAhD,gBAAwEX,EAAMI,SAAWJ,EAAMO,SACzG,EAjBuB,IA2BtBK,EAAQ,CACVC,gBAAgB,EAChBC,aAAc,SAAAC,GAGV,OAFAnB,EAAWoB,QAAQD,GACnBnB,EAAWqB,YAAYF,EAAKG,MACE,OAA1B9B,EAAUE,aACV6B,EAAAA,GAAAA,QAAgB,+CACT,IAGXvB,EAAWwB,SACNC,MAAK,SAACZ,GACHa,QAAQC,IAAI,4BACZD,QAAQC,IAAId,EACf,IAAEe,OAAM,WACLF,QAAQC,IAAI,2BACf,KACE,EACV,GAEL,OACI,4BACI,SAAC,IAAD,CAAME,IAAI,qBAAMC,SAAU9B,EAAW+B,WAArC,UACI,UAACpC,GAAD,kBAAaqB,GAAb,eACI,cAAGgB,UAAU,uBAAb,UACI,SAACC,EAAA,EAAD,OAEJ,cAAGD,UAAU,kBAAb,wDACA,cAAGA,UAAU,kBAAb,uHAOJhC,EAAWa,YAAa,UAAChB,EAAD,YACpB,SAACC,EAAD,wCACA,2BACI,sDACA,yBAAI,cAAGoC,OAAO,SAASC,KAAMnC,EAAWa,WAAWC,WAAWC,IAAID,WAAWC,IAAzE,SAA+Ef,EAAWa,WAAWC,WAAWC,IAAID,WAAWC,SACnI,gDACA,wBAAKf,EAAWoC,YAChB,sDACA,yBACI,SAACrC,EAAD,CAAOsC,IAAKrC,EAAWa,WAAWC,WAAWC,IAAID,WAAWC,SAEhE,sDACA,2BACI,kBAAOuB,IAAKrC,EAAMsC,SAxDlB,WACpBb,QAAQC,IAAI,sBACZD,QAAQC,IAAI1B,EAAKuC,QAAQC,OACzBrC,EAAMG,SAASN,EAAKuC,QAAQC,MAC/B,EAoDoEC,YAAY,4CACzD,kBAAOJ,IAAKnC,EAAMoC,SApDjB,WACrBnC,EAAMM,UAAUP,EAAKqC,QAAQC,MAChC,EAkDqEC,YAAY,+CAE9D,yBACI,cAAGR,OAAO,SAASC,KAAM/B,EAAMQ,QAA/B,SAAyCR,EAAMQ,kBAG/C,OAK3B,IClGD,GAXWtB,EAAAA,EAAAA,KAAS,YACAG,EAAAA,EAAAA,KAAXD,UAEP,OACE,iCACG,SAAC,EAAD,6DACA,SAACmD,EAAD,MAGN,G","sources":["components/Tips.js","components/Uploader.js","pages/Home.js"],"sourcesContent":["import React from \"react\";\r\nimport { useStores } from \"../stores\";\r\nimport { observer } from \"mobx-react\";\r\nimport styled from \"styled-components\";\r\nconst Tips=styled.div`\r\n   background:orange;\r\n   padding:10px;\r\n   margin:30px 0;\r\n   color:#fff;\r\n   border-radius:4px;\r\n`;\r\nconst Component=observer(({children})=>{\r\n    const {UserStore}=useStores();\r\n    return (\r\n     <>\r\n      {\r\n        UserStore.currentUser ? null :<Tips>{children}</Tips>\r\n      }\r\n     </>\r\n    );\r\n});\r\nexport default Component;","import React, { useRef } from \"react\";\r\nimport { useStores } from \"../stores\";\r\nimport { observer, useLocalStore } from \"mobx-react\";\r\nimport { message,Spin } from \"antd\";\r\nimport { InboxOutlined } from '@ant-design/icons';\r\nimport { Upload } from \"antd\";\r\nimport styled from \"styled-components\";\r\n\r\nconst { Dragger } = Upload;\r\nconst Result = styled.div`\r\n  margin-top:30px;\r\n  border:1px dashed #ccc;\r\n  padding:20px;\r\n`;\r\nconst H1 = styled.h1`\r\n  margin:20px 0;\r\n  text-align:center;\r\n`;\r\nconst Image = styled.img`\r\n  max-width:300px;\r\n`;\r\n\r\nconst Component = observer(() => {\r\n    const { ImageStore, UserStore } = useStores();\r\n\r\n    const ref1 = useRef();\r\n    const ref2 = useRef();\r\n    const store = useLocalStore(() => ({\r\n        width: null,\r\n        setWidth(width) {\r\n            store.width = width;\r\n        },\r\n        get widthStr() {\r\n            return store.width ? `/w/${store.width}` : ``;\r\n        },\r\n        height: null,\r\n        setHeight(height) {\r\n            store.height = height;\r\n        },\r\n        get heightStr() {\r\n            return store.height ? `/h/${store.height}` : '';\r\n        },\r\n        get fullStr() {\r\n            return ImageStore.serverFile.attributes.url.attributes.url + `?imageView2/0` + store.widthStr + store.heightStr;\r\n        }\r\n    }));\r\n    const bindWidthChange = () => {\r\n        console.log('bindWidthChange...');\r\n        console.log(ref1.current.value);\r\n        store.setWidth(ref1.current.value);\r\n    };\r\n    const bindHeightChange = () => {\r\n        store.setHeight(ref2.current.value);\r\n    };\r\n    const props = {\r\n        showUploadList: false,\r\n        beforeUpload: file => {\r\n            ImageStore.setFile(file);\r\n            ImageStore.setFilename(file.name);\r\n            if (UserStore.currentUser === null) {\r\n                message.warning('请先登录再上传');\r\n                return false;\r\n            }\r\n\r\n            ImageStore.upload()\r\n                .then((serverFile) => {\r\n                    console.log('上传成功');\r\n                    console.log(serverFile);\r\n                }).catch(() => {\r\n                    console.log('上传失败');\r\n                });\r\n            return false;\r\n        }\r\n    };\r\n    return (\r\n        <div>\r\n            <Spin tip=\"上传中\" spinning={ImageStore.isUpoading}>\r\n                <Dragger {...props}>\r\n                    <p className=\"ant-upload-drag-icon\">\r\n                        <InboxOutlined />\r\n                    </p>\r\n                    <p className=\"ant-upload-text\">Click or drag file to this area to upload</p>\r\n                    <p className=\"ant-upload-hint\">\r\n                        仅支持.png/.gif/.jpg/.svg格式的图片，图片最大1M\r\n                    </p>\r\n                </Dragger>\r\n            </Spin>\r\n\r\n            {\r\n                ImageStore.serverFile ? <Result>\r\n                    <H1>上传结果</H1>\r\n                    <dl>\r\n                        <dt>线上地址</dt>\r\n                        <dd><a target=\"_blank\" href={ImageStore.serverFile.attributes.url.attributes.url}>{ImageStore.serverFile.attributes.url.attributes.url}</a></dd>\r\n                        <dt>文件名</dt>\r\n                        <dd>{ImageStore.filename}</dd>\r\n                        <dt>图片预览</dt>\r\n                        <dd>\r\n                            <Image src={ImageStore.serverFile.attributes.url.attributes.url} />\r\n                        </dd>\r\n                        <dt>更多尺寸</dt>\r\n                        <dd>\r\n                            <input ref={ref1} onChange={bindWidthChange} placeholder=\"最大宽度(可选)\" />\r\n                            <input ref={ref2} onChange={bindHeightChange} placeholder=\"最大高度(可选)\" />\r\n                        </dd>\r\n                        <dd>\r\n                            <a target=\"_blank\" href={store.fullStr}>{store.fullStr}</a>\r\n                        </dd>\r\n                    </dl>\r\n                </Result> : null\r\n            }\r\n        </div>\r\n    );\r\n\r\n});\r\nexport default Component;","import React from 'react';\r\nimport {observer} from 'mobx-react';\r\nimport {useStores} from '../stores';\r\nimport Tips from '../components/Tips';\r\nimport Uploader from '../components/Uploader';\r\nconst Home=observer(()=>{\r\n  const {UserStore}=useStores();\r\n  const User=()=><div>Hello {UserStore.currentUser.attribures.username}</div>\r\n  return(\r\n    <>\r\n       <Tips>请先登录再上传!!!</Tips>\r\n       <Uploader/>\r\n    </>\r\n  );\r\n});\r\n\r\nexport default Home;"],"names":["Tips","styled","observer","children","UserStore","useStores","currentUser","Dragger","Upload","Result","H1","Image","ImageStore","ref1","useRef","ref2","store","useLocalStore","width","setWidth","widthStr","height","setHeight","heightStr","fullStr","serverFile","attributes","url","props","showUploadList","beforeUpload","file","setFile","setFilename","name","message","upload","then","console","log","catch","tip","spinning","isUpoading","className","InboxOutlined","target","href","filename","src","ref","onChange","current","value","placeholder","Uploader"],"sourceRoot":""}